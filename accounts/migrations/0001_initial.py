# Generated by Django 5.2.4 on 2025-08-30 14:23

import accounts.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Barangay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('mobile_no', models.CharField(max_length=15, unique=True)),
                ('address1', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='male', max_length=10)),
                ('user_type', models.CharField(choices=[('superadmin', 'Super Admin'), ('admin', 'Admin'), ('seller', 'Seller'), ('buyer', 'Buyer')], default='buyer', max_length=10)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=accounts.models.user_pic_upload_path)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('token_expiry', models.DateTimeField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('barangay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.barangay')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.country')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.province')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-created_at', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_premium_customer', models.BooleanField(default=False)),
                ('is_premium_customer_expiry', models.DateField(blank=True, null=True)),
                ('preferred_payment_method', models.CharField(choices=[('gcash', 'Gcash'), ('paymaya', 'Paymaya'), ('bank_card', 'Bank Card'), ('cash_on_delivery', 'Cash on Delivery')], default='gcash', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Buyer',
                'verbose_name_plural': 'Buyers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BuyerPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('gcash', 'Gcash'), ('paymaya', 'Paymaya'), ('bank_card', 'Bank Card'), ('cash_on_delivery', 'Cash on Delivery')], default='gcash', max_length=255)),
                ('payment_method_details', models.JSONField(blank=True, null=True)),
                ('bank_card_type', models.CharField(blank=True, choices=[('visa', 'Visa'), ('mastercard', 'Mastercard'), ('american_express', 'American Express')], max_length=255, null=True)),
                ('bank_card_brand', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_card_last4', models.CharField(blank=True, max_length=4, null=True)),
                ('bank_card_exp_month', models.CharField(blank=True, max_length=2, null=True)),
                ('bank_card_exp_year', models.CharField(blank=True, max_length=4, null=True)),
                ('bank_card_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_card_number', models.CharField(blank=True, max_length=16, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.buyer')),
            ],
            options={
                'verbose_name': 'Buyer Payment Method',
                'verbose_name_plural': 'Buyer Payment Methods',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='barangay',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.city'),
        ),
        migrations.AddField(
            model_name='city',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.province'),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.country')),
            ],
        ),
        migrations.AddField(
            model_name='province',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.region'),
        ),
        migrations.CreateModel(
            name='BuyerShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True)),
                ('geolocation', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('google_maps_url', models.URLField(blank=True, null=True)),
                ('google_maps_image', models.ImageField(blank=True, null=True, upload_to=accounts.models.shop_pic_upload_path)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('barangay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.barangay')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.buyer')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.country')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.province')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.region')),
            ],
            options={
                'verbose_name': 'Buyer Shipping Address',
                'verbose_name_plural': 'Buyer Shipping Addresses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.region'),
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_free_plan', models.BooleanField(default=False)),
                ('is_premium_plan', models.BooleanField(default=False)),
                ('is_premium_plan_expiry', models.DateField(blank=True, null=True)),
                ('is_premium_plan_image', models.ImageField(blank=True, null=True, upload_to=accounts.models.shop_pic_upload_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Seller',
                'verbose_name_plural': 'Sellers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('shop_type', models.CharField(choices=[('water', 'Water'), ('laundry', 'Laundry'), ('rice', 'Rice'), ('groceries', 'Groceries'), ('other', 'Other')], default='water', max_length=10)),
                ('shop_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_address1', models.TextField(blank=True, null=True)),
                ('shop_address2', models.TextField(blank=True, null=True)),
                ('shop_zip_code', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_contact_number', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_contact_person', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_contact_person_number', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('shop_website', models.URLField(blank=True, null=True)),
                ('shop_facebook', models.URLField(blank=True, null=True)),
                ('shop_instagram', models.URLField(blank=True, null=True)),
                ('shop_youtube', models.URLField(blank=True, null=True)),
                ('shop_tiktok', models.URLField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('geolocation', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('google_maps_url', models.URLField(blank=True, null=True)),
                ('google_maps_image', models.ImageField(blank=True, null=True, upload_to=accounts.models.shop_pic_upload_path)),
                ('shop_picture1', models.ImageField(blank=True, null=True, upload_to=accounts.models.shop_pic_upload_path)),
                ('shop_picture2', models.ImageField(blank=True, null=True, upload_to=accounts.models.shop_pic_upload_path)),
                ('shop_picture3', models.ImageField(blank=True, null=True, upload_to=accounts.models.shop_pic_upload_path)),
                ('shop_business_permit_number', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_business_permit_expiry', models.DateField(blank=True, null=True)),
                ('shop_business_permit_image', models.ImageField(blank=True, null=True, upload_to=accounts.models.shop_pic_upload_path)),
                ('shop_dti_permit_number', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_dti_permit_expiry', models.DateField(blank=True, null=True)),
                ('shop_dti_permit_image', models.ImageField(blank=True, null=True, upload_to=accounts.models.shop_pic_upload_path)),
                ('is_philgeps_registered', models.BooleanField(default=False)),
                ('philgeps_permit_number', models.CharField(blank=True, max_length=255, null=True)),
                ('philgeps_permit_expiry', models.DateField(blank=True, null=True)),
                ('philgeps_permit_image', models.ImageField(blank=True, null=True, upload_to=accounts.models.shop_pic_upload_path)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.seller')),
                ('shop_barangay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.barangay')),
                ('shop_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.city')),
                ('shop_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.country')),
                ('shop_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.province')),
                ('shop_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.region')),
            ],
            options={
                'verbose_name': 'Shop',
                'verbose_name_plural': 'Shops',
                'ordering': ['-created_at', 'shop_short_name'],
            },
        ),
        migrations.AddIndex(
            model_name='buyer',
            index=models.Index(fields=['buyer_id'], name='accounts_bu_buyer_i_3b2362_idx'),
        ),
        migrations.AddIndex(
            model_name='buyerpaymentmethod',
            index=models.Index(fields=['id'], name='accounts_bu_id_f98b30_idx'),
        ),
        migrations.AddIndex(
            model_name='buyershippingaddress',
            index=models.Index(fields=['id'], name='accounts_bu_id_fdbe15_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['mobile_no'], name='accounts_cu_mobile__4a91c8_idx'),
        ),
        migrations.AddIndex(
            model_name='seller',
            index=models.Index(fields=['seller_id'], name='accounts_se_seller__aeaa4e_idx'),
        ),
        migrations.AddIndex(
            model_name='shop',
            index=models.Index(fields=['shop_id'], name='accounts_sh_shop_id_b41641_idx'),
        ),
    ]
